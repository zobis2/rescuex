version: '3.8'

services:
#  mediamtx:
#    image: bluenviron/mediamtx:latest
#    container_name: mediamtx
##    hostname: mediamtx
#    ports:
#      - "8554:8554"       # RTSP
#      - "1935:1935"       # RTMP
#      - "8888:8888"       # HLS
#      - "8889:8889"       # WebRTC (HTTP Signaling)
#      - "8189:8189/udp"   # WebRTC ICE (UDP)
#      - "8189:8189"       # WebRTC ICE (TCP)
#      - "9997:9997"       # WebRTC ICE (TCP)
#    volumes:
#      - ./mediamtx.yml:/mediamtx.yml
#    restart: unless-stopped
#    networks:
#      - node-network
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: atom
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - node-network

    ports:
      - "5432:5432"

  nginx:
      build:
        context: ./nginx
      container_name: nginx
      restart: always
      tty: true
      ports:
        - "80:80"
        - "443:443"  # Adding port 443 for HTTPS
      volumes:
        # - ./nginx/conf.d:/etc/nginx/conf.d
        - ./certbot/conf:/etc/letsencrypt  # For Certbot certificates
        - ./certbot/www:/var/www/certbot  # For Certbot challenge
#        - ./nginx/selfsigned.key:/selfsigned.key  # For Certbot challenge
#        - ./nginx/selfsigned.crt:/selfsigned.crt  # For Certbot challenge
#        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      networks:
        - node-network
#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'certbot certonly --webroot --webroot-path=/var/www/certbot -d web.atom.construction --non-interactive --agree-tos --email zobis2@gmail.com && while :; do certbot renew --webroot --webroot-path=/var/www/certbot --quiet; sleep 12h & wait $${!}; done;'"
##    entrypoint: "sleep 12h & wait $${!}; done;'"
#    restart: always
#    tty: true

networks:
  node-network:
    external: true
volumes:
  pgdata:
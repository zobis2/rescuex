version: '3.8'

services:

#  back-end-flask:
#
#    container_name: back-end-flask
#    build:
#      context: ../src
#      dockerfile: Dockerfile
#    ports:
#      - "5001:5001"
#    volumes:
#      - ../src:/app
#    environment:
#      - FLASK_ENV=development
#    networks:
#      - node-network
  back-end:
    build:
      context: backend
    container_name: back-end
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=./gilgalwebapp-key-google.json
      #      - FLASK_APP_API_HOST=http://nginx
#      - FLASK_APP_API_HOST=https://web.atom.construction
      - PORT=5000
    working_dir: /usr/src/app
    networks:
      - node-network
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports:
      - "5000:5000"
    command: npm run start
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 312M


  front-end:
    environment:
     - REACT_APP_API_HOST=http://localhost:8000
     - REACT_APP_FLASK_API_HOST=http://localhost:8000
#     - FLASK_APP_API_HOST=https://web.atom.construction

    build:
      context: frontend
    container_name: front-end
    working_dir: /usr/src/app
    networks:
      - node-network
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports:
      - "3000:3000"
    command: npm run start
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 312M

  nginx:
      build:
        context: nginx
      container_name: nginx
      restart: always
      tty: true
      ports:
        - "8000:8000"
        - "80:80"
        - "443:443"  # Adding port 443 for HTTPS
      volumes:
#        - ./nginx/conf.d:/etc/nginx/conf.d
        - ./certbot/conf:/etc/letsencrypt  # For Certbot certificates
        - ./certbot/www:/var/www/certbot  # For Certbot challenge
      networks:
        - node-network
      depends_on:
        - back-end
        - front-end
#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'certbot certonly --webroot --webroot-path=/var/www/certbot -d web.atom.construction --non-interactive --agree-tos --email zobis2@gmail.com && while :; do certbot renew --webroot --webroot-path=/var/www/certbot --quiet; sleep 12h & wait $${!}; done;'"
##    entrypoint: "sleep 12h & wait $${!}; done;'"
#    restart: always
#    tty: true
      deploy:
        resources:
          limits:
            cpus: '0.5'
            memory: 312M
networks:
  node-network:
    external: true